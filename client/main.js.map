{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.component.css","webpack:///./src/app/account/account.component.html","webpack:///./src/app/account/account.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/services/account.service.ts","webpack:///./src/app/services/admin.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".accountdetails {\\n    margin: auto;\\n    width: 400px;\\n    padding: 10px;\\n}\\n\\ninput {\\n    display: block;\\n    margin: 5px 0;\\n    width: 300px;\\n    text-align: center;\\n}\\n\\nbutton {\\n    background-color: slategray;\\n    color: white;\\n    padding: 5px 10px;\\n    margin: 8px 0;\\n}\\n\\nbutton:hover {\\n    opacity: 0.7;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnRkZXRhaWxzIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbmlucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDVweCAwO1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICBtYXJnaW46IDhweCAwO1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNztcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"accountdetails\\\">\\n    <h1>Account Details</h1>\\n    <div>\\n      <img src=\\\"images\\\\{{profilepic}}\\\" height=\\\"256\\\" width=\\\"256\\\">\\n      <h2>{{username}}</h2>\\n    </div>\\n    <div>\\n      <h2> Update Password </h2>\\n      <form ngNativeValidate (submit)=\\\"updatePassword()\\\">\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"currentpassword\\\" name=\\\"currentpassword\\\" placeholder=\\\"Current Password\\\" required>\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"newpassword\\\" name=\\\"newpassword\\\" placeholder=\\\"New Password\\\" required>\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"confirmpassword\\\" name=\\\"confirmpassword\\\" placeholder=\\\"Confirm New Password\\\" required>\\n        <button type=\\\"submit\\\">Update Password</button>\\n      </form>\\n    </div>\\n    <div>\\n      <h2>Profile Picture</h2>\\n      <h3>File Upload</h3>\\n      <form>\\n        <input type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\" name=\\\"uploadfile\\\" id=\\\"uploadfile\\\"/>\\n        <button type=\\\"button\\\" (click)=\\\"onUpload()\\\">Upload</button>\\n      </form>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  // NG Bindings for Account Details\n  username:string = sessionStorage.getItem('username');\n  profilepic = \"\";\n  \n  // NG Bindings for Updating Passwords\n  currentpassword:string = '';\n  newpassword:string = '';\n  confirmpassword:string = '';\n  \n  // NG Bindings for Uploading a Profile Image\n  selectedfile = null;\n\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    // User is logged in Check\n    if (!sessionStorage.getItem('username')) {\n      sessionStorage.clear();\n      alert('User is not logged in');\n      this.router.navigateByUrl('login');\n    } else {\n      // Call Account Service to Recieve Account Details\n      this.accountService.getaccountdetails(this.username).subscribe(data => {\n        // Display Current Account Profile Picture\n        this.profilepic = data.profilepic;\n      });\n    }\n  }\n\n  // Sends request to server to update Account Password\n  updatePassword() {\n    // Checks if User has successfully confirm new password input\n    if (this.newpassword !== this.confirmpassword) {\n      alert(\"Cannot Confirm New Password, Please try again\");\n      // Reset NG Fields\n      this.newpassword = '';\n      this.confirmpassword = '';\n    } \n    \n    // Sends Password Inputs to Server to validate if Account Password can be Updated\n    else {\n      // Call Account Service to Send and Update Account Password\n      this.accountService.updatepassword(this.username, this.currentpassword, this.newpassword).subscribe(data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"Successfully Updated Account Password\");\n        } else if (data.success == false) {\n          alert(\"Current Password does not match Account Password\");\n        }\n      });\n      // Reset NG Fields\n      this.currentpassword = '';\n      this.newpassword = '';\n      this.confirmpassword = '';\n    }\n  }\n\n  // Store the Selected Profile Picture File to Variable\n  onFileSelected(event) {\n    console.log(event);\n    this.selectedfile = event.target.files[0];\n  }\n\n  // Perform Upload and Update of Account Profile Picture to Server Database\n  onUpload() {\n    // Construct new Form to Upload Image\n    const fd = new FormData();\n    fd.append('image', this.selectedfile, this.selectedfile.name);\n    \n    // Call Account Service to Upload Selected Image to Database\n    this.accountService.imgupload(fd).subscribe(res => {\n      console.log(res.data.filename + \" , \" + res.data.size);\n      \n      // Call Account Service that Updates the Account's Profile Picture with Uploaded Image\n      this.accountService.updateprofilepic(this.username, res.data.filename).subscribe(res => {\n        // Update Current Profile Picture\n        this.profilepic = res.profilepic;\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { AccountComponent } from './account/account.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'chat', component: ChatComponent},\n  {path: 'account', component: AccountComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"container\\\">\\n  <app-menu></app-menu>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Chat-App';\n\n  constructor() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SocketService } from './services/socket.service';\nimport { MenuComponent } from './menu/menu.component';\nimport { LoginComponent } from './login/login.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { AccountComponent } from './account/account.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    LoginComponent,\n    ChatComponent,\n    AccountComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n  ],\n  providers: [SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container {\\n    width: 100%;\\n    height: 100%;\\n}\\n.chat {\\n    float: left;\\n    padding: 10px;\\n    height: 100vh;\\n}\\n.chat.middle {\\n    width: 55%;\\n    min-width: 600px;\\n    height: auto;\\n    display: inline-block;\\n    height: 100%;\\n    background-color: #23272a;\\n}\\n#userprofile {\\n    width: 99%;\\n    height: 280px;\\n    border-style: inset;\\n    border-width: 10px;\\n}\\n#profilepic {\\n    margin-left: 10px;\\n    margin-top: 10px;\\n    float: left;\\n}\\n#profiledetails {\\n    float: left;\\n    margin-left: 20px;\\n    margin-top: 50px;\\n}\\n.chat.side {\\n    width: 20%;\\n    min-width: 300px;\\n    height: auto;\\n    display: inline-block;\\n}\\n.channels {\\n    width: 100%;\\n    height: 40px;\\n    cursor: pointer;\\n    text-align: left;\\n    background-color: #23272a;\\n    color: white;\\n    border: none;\\n    outline: none;\\n}\\n.chat.side h2 {\\n    text-decoration: underline;\\n}\\n.chat.side form input[type=\\\"text\\\"] {\\n    display: block;\\n    height: 20px; \\n    width: 90%;\\n}\\n.chat.side form select {\\n    display: block;\\n    height: 20px;\\n    width: 90%;\\n}\\n.chat.side form button {\\n    background-color: slategray;\\n    color: white;\\n    padding: 5px 10px;\\n    margin: 8px 0;\\n}\\n.chat.middle button {\\n    background-color: slategray;\\n    color: white;\\n    padding: 10px 20px;\\n    margin: 8px 0;\\n}\\nbutton:hover {\\n    opacity: 0.7;\\n}\\n.chat.side li {\\n    color: white;\\n    padding: 10px;\\n    text-decoration: none;\\n    display: block;\\n}\\n.chat.side li:hover {\\n    background-color: palegrey;\\n}\\n#ChatLog {\\n    width: 100%;\\n    height: 600px;\\n    overflow: auto;\\n}\\n#ChatLogMessages {\\n    padding: 7px 10px;\\n    font-size: 16;\\n}\\n#ChatMessage {\\n    width: 90%;\\n    min-width: 500px;\\n    padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixhQUFhO0FBQ2pCO0FBRUE7SUFDSSxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsWUFBWTtJQUNaLHlCQUF5QjtBQUM3QjtBQUVBO0lBQ0ksVUFBVTtJQUNWLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFdBQVc7QUFDZjtBQUVBO0lBQ0ksV0FBVztJQUNYLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7QUFFQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLHFCQUFxQjtBQUN6QjtBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGFBQWE7QUFDakI7QUFFQTtJQUNJLDBCQUEwQjtBQUM5QjtBQUVBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWixVQUFVO0FBQ2Q7QUFFQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1osVUFBVTtBQUNkO0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixhQUFhO0FBQ2pCO0FBRUE7SUFDSSwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixhQUFhO0FBQ2pCO0FBRUE7SUFDSSxZQUFZO0FBQ2hCO0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixjQUFjO0FBQ2xCO0FBRUE7SUFDSSwwQkFBMEI7QUFDOUI7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsY0FBYztBQUNsQjtBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7QUFDakI7QUFFQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuLmNoYXQge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLmNoYXQubWlkZGxlIHtcbiAgICB3aWR0aDogNTUlO1xuICAgIG1pbi13aWR0aDogNjAwcHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzMjcyYTtcbn1cblxuI3VzZXJwcm9maWxlIHtcbiAgICB3aWR0aDogOTklO1xuICAgIGhlaWdodDogMjgwcHg7XG4gICAgYm9yZGVyLXN0eWxlOiBpbnNldDtcbiAgICBib3JkZXItd2lkdGg6IDEwcHg7XG59XG5cbiNwcm9maWxlcGljIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xufVxuXG4jcHJvZmlsZWRldGFpbHMge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG59XG5cbi5jaGF0LnNpZGUge1xuICAgIHdpZHRoOiAyMCU7XG4gICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uY2hhbm5lbHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjMyNzJhO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgb3V0bGluZTogbm9uZTtcbn1cblxuLmNoYXQuc2lkZSBoMiB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5jaGF0LnNpZGUgZm9ybSBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAyMHB4OyBcbiAgICB3aWR0aDogOTAlO1xufVxuXG4uY2hhdC5zaWRlIGZvcm0gc2VsZWN0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDkwJTtcbn1cblxuLmNoYXQuc2lkZSBmb3JtIGJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICBtYXJnaW46IDhweCAwO1xufVxuXG4uY2hhdC5taWRkbGUgYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzbGF0ZWdyYXk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBtYXJnaW46IDhweCAwO1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNztcbn1cblxuLmNoYXQuc2lkZSBsaSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY2hhdC5zaWRlIGxpOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxlZ3JleTtcbn1cblxuI0NoYXRMb2cge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNjAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbiNDaGF0TG9nTWVzc2FnZXMge1xuICAgIHBhZGRpbmc6IDdweCAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMTY7XG59XG5cbiNDaGF0TWVzc2FnZSB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"chat side\\\">\\n        <div *ngIf=\\\"role == 'Super Admin' || role == 'Group Admin'\\\">\\n            <h2>Create Group</h2>\\n            <form ngNativeValidate (submit)=\\\"createGroup()\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newgroup\\\" placeholder=\\\"Group Name\\\" name=\\\"groupname\\\" required>\\n                <button type=\\\"submit\\\">Create Group</button>\\n            </form>\\n            <h2>Create Channel</h2>\\n            <form ngNativeValidate (submit)=\\\"createChannel()\\\">\\n                <select [(ngModel)]=\\\"selectedgroup\\\" name=\\\"selectedgroupname\\\" required>\\n                    <ng-container *ngFor=\\\"let group of groups\\\">\\n                        <ng-container *ngIf=\\\"group.groupname != 'Default' && group.groupname != 'Admin Group'\\\">\\n                            <option value=\\\"{{group.groupname}}\\\">{{group.groupname}}</option>\\n                        </ng-container>\\n                    </ng-container>\\n                </select>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newchannel\\\" placeholder=\\\"Channel Name\\\" name=\\\"channelname\\\" required>\\n                <button type=\\\"submit\\\">Create Channel</button>\\n            </form>\\n        </div>\\n        <div>\\n            <h2>Groups:</h2>\\n            <div *ngFor=\\\"let group of groups\\\">\\n                <h3>{{group.groupname}}</h3>\\n                <div *ngFor=\\\"let channel of group.channels\\\"><button (click)=\\\"joinChannel(group.groupname, channel.channelname)\\\" class=\\\"channels\\\">{{channel.channelname}}</button></div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"role == 'Super Admin' || role == 'Group Admin'\\\">\\n            <h2>Delete Group</h2>\\n            <form ngNativeValidate (submit)=\\\"deleteGroup()\\\">\\n                <select [(ngModel)]=\\\"deletegroup\\\" name=\\\"deletegroupname\\\" required>\\n                    <ng-container *ngFor=\\\"let group of groups\\\">\\n                        <ng-container *ngIf=\\\"group.groupname != 'Default' && group.groupname != 'Admin Group'\\\">\\n                            <option value=\\\"{{group.groupname}}\\\">{{group.groupname}}</option>\\n                        </ng-container>\\n                    </ng-container>\\n                </select>\\n                <button type=\\\"submit\\\">Delete Group</button>\\n            </form>\\n            <h2>Delete Channel</h2>\\n            <form ngNativeValidate (submit)=\\\"deleteChannel()\\\">\\n                <select [(ngModel)]=\\\"deletechannelgroup\\\" name=\\\"deletechannelgroupname\\\" required>\\n                    <ng-container *ngFor=\\\"let group of groups\\\">\\n                        <ng-container *ngIf=\\\"group.groupname != 'Default' && group.groupname != 'Admin Group'\\\">\\n                            <option value=\\\"{{group.groupname}}\\\">{{group.groupname}}</option>\\n                        </ng-container>\\n                    </ng-container>\\n                </select>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"deletechannel\\\" placeholder=\\\"Channel Name\\\" name=\\\"deletechannelname\\\" required>\\n                <button type=\\\"submit\\\">Delete Channel</button>\\n            </form>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"chat middle\\\">\\n        <div id=\\\"userprofile\\\">\\n            <div id=\\\"profilepic\\\" *ngIf=\\\"profilepic != null\\\">\\n                    <img src=\\\"images\\\\{{profilepic}}\\\" height=\\\"256\\\" width=\\\"256\\\">\\n            </div>\\n            <div id=\\\"profiledetails\\\">\\n                <h2>Username: {{username}}</h2>\\n                <h3>Role: {{role}}</h3>\\n            </div>\\n        </div>\\n        <h3>{{currentgroup}} ({{currentchannel}})</h3>\\n        <div>\\n            <h2>Chat Messages</h2>\\n            <div id=\\\"ChatLog\\\">\\n                <div *ngFor=\\\"let message of messages\\\" id=\\\"ChatLogMessages\\\">{{message}}</div>\\n            </div>\\n            <input [(ngModel)]=\\\"message\\\" id=\\\"ChatMessage\\\" placeholder=\\\"Enter Chat Message\\\">\\n            <button (click)=\\\"sendMessage()\\\">Send</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"chat side\\\">\\n        <div *ngIf=\\\"role == 'Super Admin' || role == 'Group Admin'\\\">\\n            <div>\\n                <h2>Invite User</h2>\\n                <form ngNativeValidate (submit)=\\\"registerUser()\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"username\\\" [(ngModel)]='newuser' name=\\\"newusername\\\" required>\\n                    <button type=\\\"submit\\\">Invite User</button>\\n                </form>\\n            </div>\\n            <div>\\n                <h2>Update User Role</h2>\\n                <form ngNativeValidate (submit)=\\\"updateRole()\\\">\\n                    <select [(ngModel)]=\\\"selecteduser\\\" name=\\\"selectedusername\\\" required>\\n                        <ng-container *ngFor=\\\"let user of users\\\">\\n                            <option *ngIf=\\\"role == 'Super Admin' && user.username != username\\\" value=\\\"{{user.username}}\\\">{{user.username}}</option>\\n                            <option *ngIf=\\\"role == 'Group Admin' && user.username != username && user.role != 'Super Admin'\\\" value=\\\"{{user.username}}\\\">{{user.username}}</option>\\n                        </ng-container>\\n                    </select>\\n                    <select [(ngModel)]=\\\"newrole\\\" name=\\\"selectedrole\\\" required>\\n                        <option value=\\\"Super Admin\\\" *ngIf=\\\"role == 'Super Admin'\\\">Super Admin</option>\\n                        <option value=\\\"Group Admin\\\">Group Admin</option>\\n                        <option value=\\\"Member\\\">Member</option>\\n                    </select>\\n                    <button type=\\\"submit\\\">Update Role</button>\\n                </form>\\n            </div>\\n        </div>\\n        <div>\\n            <h2>Users:</h2>\\n            <h3>Super Admins</h3>\\n            <ul>\\n                <ng-container *ngFor=\\\"let user of users\\\">\\n                    <li *ngIf=\\\"user.role == 'Super Admin'\\\">\\n                        <ng-container *ngIf=\\\"user.profilepic != null\\\"><img src=\\\"images\\\\{{user.profilepic}}\\\" height=\\\"60\\\" width=\\\"60\\\"></ng-container>\\n                        {{user.username}}\\n                    </li>\\n                </ng-container>\\n            </ul>\\n            <h3>Group Admins</h3>\\n            <ul>\\n                <ng-container *ngFor=\\\"let user of users\\\">\\n                    <li *ngIf=\\\"user.role == 'Group Admin'\\\">\\n                        <ng-container *ngIf=\\\"user.profilepic != null\\\"><img src=\\\"images\\\\{{user.profilepic}}\\\" height=\\\"60\\\" width=\\\"60\\\"></ng-container>\\n                        {{user.username}}\\n                    </li>\\n                </ng-container>\\n            </ul>\\n            <h3>Members</h3>\\n            <ul>\\n                <ng-container *ngFor=\\\"let user of users\\\">\\n                    <li *ngIf=\\\"user.role == 'Member'\\\">\\n                        <ng-container *ngIf=\\\"user.profilepic != null\\\"><img src=\\\"images\\\\{{user.profilepic}}\\\" height=\\\"60\\\" width=\\\"60\\\"></ng-container>\\n                        {{user.username}}\\n                    </li>\\n                </ng-container>\\n            </ul>\\n        </div>\\n        <div *ngIf=\\\"role == 'Super Admin'\\\">\\n            <h2>Delete User</h2>\\n            <form ngNativeValidate (submit)=\\\"deleteUser()\\\">\\n                <select [(ngModel)]=\\\"deleteuser\\\" name=\\\"deleteusername\\\" required>\\n                    <ng-container *ngFor=\\\"let user of users\\\">\\n                        <option *ngIf=\\\"role == 'Super Admin' && user.username != username\\\" value=\\\"{{user.username}}\\\">{{user.username}}</option>\\n                        <option *ngIf=\\\"role == 'Group Admin' && user.username != username && user.role != 'Super Admin'\\\" value=\\\"{{user.username}}\\\">{{user.username}}</option>\\n                    </ng-container>\\n                </select>\\n                <button type=\\\"submit\\\">Delete User</button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../services/socket.service';\nimport { AdminService } from '../services/admin.service';\nimport { AccountService } from '../services/account.service';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  // NG Binds for Chat Log and Messages\n  message: string;  // Stores chat message\n  messages: string[] = []; // Stores collection of chat messages\n  \n  // NG Binds for User, Groups and Channels List\n  users;\n  groups;\n\n  // NG Binds for Account Details\n  username: string = sessionStorage.getItem('username');\n  role;\n  profilepic;\n  currentgroup:string = sessionStorage.getItem('currentgroup');\n  currentchannel:string = sessionStorage.getItem('currentchannel');\n\n  // Subscription Refresh\n  obrefresh;\n  \n  // Subscription Feeds\n  accountfeed;\n  userfeed;\n  groupfeed;\n  messagefeed;\n\n  // Ng Form Binds for Admin Tools\n  newuser: string;\n  newchannel: string;\n  newgroup: string;\n  selecteduser: string;\n  selectedgroup: string;\n  newrole: string;\n  deleteuser: string;\n  deletegroup: string;\n  deletechannelgroup: string;\n  deletechannel: string;\n\n  constructor(private socketService: SocketService, private adminService: AdminService, private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    // User is logged in Check\n    if (!sessionStorage.getItem('username')) {\n      sessionStorage.clear();\n      alert('User is not logged in');\n      this.router.navigateByUrl('login');\n    }\n    \n    // If Login confirmed, subsribe to socket.\n    else {\n      // Refresh Observable Subscriptions every Second\n      let obtimer = timer(1000, 1000);\n      this.obrefresh = obtimer.subscribe(data => {\n\n        // Subscribe to Account Feed to retrieve Observable data of Account Details\n        this.accountfeed = this.accountService.getaccountdetails(this.username).subscribe(data => {\n          // Display Account Details\n          this.role = data.role;\n          this.profilepic = data.profilepic;\n        });\n        \n        // Subscribe to Channel Feed to retrieve Observable Data of Stored Users\n        this.userfeed = this.adminService.fetchUsers().subscribe(data => {\n          // Display User List\n          this.users = data;\n        });\n\n        // Subscribe to Channel Feed to retrieve Observable Data of Stored Groups\n        this.groupfeed = this.adminService.fetchGroups().subscribe(data => {\n          // Display Groups and Channels\n          this.groups = data;\n        });\n      });\n      \n      // Subscribes to Message Feed with chat messages sent / recieved.\n      this.messagefeed = this.socketService.getMessages().subscribe((message: string) => {\n        // Update Messages\n        this.messages.push(message);\n        this.message = '';\n      });\n\n      // Join Default Channel Upon Entering Chat\n      this.socketService.defaultChannel(this.username);\n    }\n  }\n  \n  // Register a New User to the Chat-Application\n  registerUser() {\n    this.adminService.registeruser(this.newuser).subscribe(\n      data => {\n        // Perform Respone Data Checks\n        if (data.success == true) {\n          alert(\"User \" + data.username + \" has been successfully created\");\n        } else if (data.success == false) {\n          alert(\"User \" + data.username + \" already exists\");\n        }\n        this.newuser = '';\n      },\n      error => {alert(\"Error: \" + error);});\n  }\n  \n  // Update an Existing User's Role\n  updateRole() {\n    this.adminService.updaterole(this.selecteduser, this.newrole).subscribe(\n      data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"User '\" + data.username + \"' has been changed to '\" + data.role + \"'\");\n        } else if (data.success == false) {\n          alert(data.username + \" has not changed role\");\n        }\n        this.selecteduser = '';\n        this.newrole = '';\n      }\n    );\n  }\n\n  // Delete a User from Chat-App\n  deleteUser() {\n    this.adminService.deleteuser(this.deleteuser).subscribe(\n      data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"User '\" + data.username + \"' has been deleted\");\n        } else if (data.success == false) {\n          alert(\"Failed to delete User\");\n        }\n        this.deleteuser = '';\n      }\n    );\n  }\n\n  // Create a new Group\n  createGroup() {\n    this.adminService.creategroup(this.newgroup).subscribe(\n      data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"Group '\" + data.groupname + \"' has been created\");\n        } else if (data.success == false) {\n          alert(\"Group '\" + data.groupname + \"' already exists\");\n        }\n        this.newgroup = '';\n      }\n    );\n  }\n\n  // Delete an Existing Group\n  deleteGroup() {\n    this.adminService.deletegroup(this.deletegroup).subscribe(\n      data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"Group '\" + data.groupname + \"' has been deleted\")\n        } else if (data.success == false) {\n          alert(\"Error: Group Not Found\");\n        }\n        this.deletegroup = '';\n      }\n    );\n  }\n\n  // Create a new Channel for Chat-Application\n  createChannel() {\n    console.log(\"Creating Channel\");\n    this.adminService.createchannel(this.selectedgroup ,this.newchannel).subscribe(\n      data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"Channel '\" + data.channelname + \" ' has been created\");\n        } else if (data.success == false) {\n          alert(\"Channel '\" + data.channelname + \" ' already exists in Group '\" + data.groupname +\"'\");\n        }\n        this.newchannel = '';\n      }\n    );\n  }\n\n  // Delete a Channel from Group\n  deleteChannel() {\n    this.adminService.deletechannel(this.deletechannelgroup, this.deletechannel).subscribe(\n      data => {\n        // Perform Response Data Checks\n        if (data.success == true) {\n          alert(\"Channel \" + data.channelname + \" has been deleted from \" + data.groupname);\n        } else if (data.success == false) {\n          alert(\"Channel doesn't exist in \" + data.groupname);\n        }\n        this.deletechannelgroup = '';\n        this.deletechannel = '';\n      }\n    );\n  }\n\n  // Join a new chat channel\n  joinChannel(group, channel) {\n    if (group !== this.currentgroup && channel !== this.currentchannel) {\n      var leavechannel = (this.currentgroup +  \" \" + this.currentchannel); // Store Current Channel\n      var leavemessage = (this.username + \" has left the channel\"); // Create a Message to Broadcast to Old Channel\n      var joinchannel = (group + \" \" + channel); // Store Selected Channel\n      var joinmessage = (this.username + \" has joined \" + channel); // Create a Message to Broadcast to New Channel\n      this.messages = []; // Reset Chat Messages\n\n      // Disconnect from Current Channel and Join New Channel\n      this.socketService.leaveChannel(leavechannel, leavemessage);\n      this.socketService.joinChannel(joinchannel, joinmessage);\n      \n      // Update Current Channel when joining New Channel\n      this.currentgroup = group;\n      this.currentchannel = channel;\n    }\n  }\n\n  // Sends message to all connected chat members in channel\n  sendMessage() {\n    var channel = (this.currentgroup + \" \" + this.currentchannel); // Store Current Channel\n    var message = ('(' + this.username + '): ' + this.message); // Create message to send to Current Channel\n    this.socketService.sendMessage(channel, message);\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from Feeds\n    if (this.obrefresh) {this.obrefresh.unsubscribe(); console.log(\"Unsubscribed from OB Refresh\");}\n    if (this.accountfeed) {this.accountfeed.unsubscribe(); console.log(\"Unsubscribed from Account Feed\");}\n    if (this.userfeed) {this.userfeed.unsubscribe(); console.log(\"Unsubscribed from UserFeed\");}\n    if (this.groupfeed) {this.groupfeed.unsubscribe(); console.log(\"Unsubscribed from GroupFeed\");}\n    if (this.messagefeed) { this.messagefeed.unsubscribe(); console.log(\"Unsubscribed from MessageFeed\");}\n  }\n}","module.exports = \".loginform {\\n    margin: auto;\\n    width: 400px;\\n    padding: 10px;\\n}\\n\\n\\ninput[type=email], input[type=password] {\\n    display: block;\\n    width: 300px;\\n    padding: 5px;\\n    border: 1px solid black;\\n    box-sizing: border-box;\\n}\\n\\n\\nbutton {\\n    background-color: slategray;\\n    color: white;\\n    padding: 10px 20px;\\n    margin: 8px 0;\\n}\\n\\n\\nbutton:hover {\\n    opacity: 0.7;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osYUFBYTtBQUNqQjs7O0FBR0E7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsc0JBQXNCO0FBQzFCOzs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakI7OztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW5mb3JtIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cblxuaW5wdXRbdHlwZT1lbWFpbF0sIGlucHV0W3R5cGU9cGFzc3dvcmRdIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgbWFyZ2luOiA4cHggMDtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjc7XG59Il19 */\"","module.exports = \"<div class=\\\"containter\\\">\\n  <div class=\\\"loginform\\\">\\n    <h2>Chat-App Login</h2>\\n    <form (submit)=\\\"userLogin()\\\">\\n    <input type=\\\"email\\\" placeholder=\\\"Username\\\" [(ngModel)]='username' name=\\\"username\\\" id=\\\"username\\\">\\n    <input type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]='password' name=\\\"password\\\" id=\\\"password\\\">\\n    <button type=\\\"submit\\\">Login</button>\\n  </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  username:string = '';\n  password:string = '';\n\n  constructor(private router: Router, private form: FormsModule, private authservice: AuthService) { }\n\n  ngOnInit() {\n    // Responds if User is already currently logged in. Redirect to Chat.\n    if (sessionStorage.getItem('username')) {\n      alert(\"User is already logged in as: \" + sessionStorage.getItem('username') );\n      this.router.navigateByUrl('chat');\n    }\n  }\n\n  // Login Function when login form is submitted to Auth Service.\n  userLogin () {\n    this.authservice.login(this.username, this.password).subscribe(\n      data => {\n        // Assign returned Auth Data to Session Storage\n        sessionStorage.setItem('username', data.username);\n        sessionStorage.setItem('currentgroup', 'Default');\n        sessionStorage.setItem('currentchannel', 'Welcome to Chat App');\n        this.router.navigateByUrl('chat');\n      },\n      error => { \n        // Notify User upon return of Authentication Error\n        alert('Username and Password were incorrect');\n        this.username = '';\n        this.password = '';\n      }\n    );\n  }\n}\n","module.exports = \"ul {\\n    list-style-type: none;\\n    margin: 0%;\\n    padding: 0%;\\n    overflow: hidden;\\n    background-color: dimgray;\\n}\\n\\nli {\\n    float: left;\\n}\\n\\na {\\n    display: block;\\n    color: white;\\n    text-align: center;\\n    text-decoration: none;\\n    padding: 14px 16px;\\n}\\n\\na:hover {\\n    background-color: slategray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS9tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsVUFBVTtJQUNWLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDAlO1xuICAgIHBhZGRpbmc6IDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGltZ3JheTtcbn1cblxubGkge1xuICAgIGZsb2F0OiBsZWZ0O1xufVxuXG5hIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBwYWRkaW5nOiAxNHB4IDE2cHg7XG59XG5cbmE6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHNsYXRlZ3JheTtcbn0iXX0= */\"","module.exports = \"<nav>\\n  <ul>\\n    <li><a routerLink=\\\"login\\\">Login</a></li>\\n    <li><a routerLink=\\\"chat\\\">Chat</a></li>\\n    <li><a routerLink=\\\"account\\\">Account</a></li>\\n    <li style=\\\"float:right\\\"><a (click)=\\\"logout()\\\">Logout</a></li>\\n  </ul>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    if(sessionStorage.getItem('username')) {\n      sessionStorage.clear();\n      this.router.navigateByUrl('login');\n    }\n\n    else {\n      alert(\"User has already been logged out\");\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface account {\n  username:string;\n  role:string;\n  profilepic:string\n  success:boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  // Server Retrieve Account Details HTTP\n  getaccountdetails(username) {\n    return this.http.post<account>('/api/accounts/users/getdetails', {username:username});\n  }\n\n  // Server Update Account Password HTTP\n  updatepassword(username, currentpassword, newpassword) {\n    return this.http.post<account>('/api/accounts/users/updatepassword', {username:username, password:currentpassword, newpassword:newpassword});\n  }\n\n  // Upload Profile Picture HTTP\n  imgupload(fd) {\n    return this.http.post<any>('/api/accounts/users/imgupload', fd);\n  }\n\n  // Server Update Account Profile Picture HTTP\n  updateprofilepic(username, profilepic) {\n    return this.http.post<any>('/api/accounts/users/updateprofilepic', {username:username, profilepic:profilepic});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface user {\n  username: string;\n  role: string;\n  profilepic: string;\n  success: boolean;\n}\n\nexport interface group {\n  groupname: string;\n  success: boolean;\n}\n\nexport interface channel {\n  groupname: string;\n  channelname: string;\n  success: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AdminService {\n\n  constructor(private http: HttpClient) { }\n\n  // Server User Registration HTTP\n  registeruser(username:string) {\n    return this.http.post<user>('api/admin/reg', { username:username });\n  }\n\n  // Server Update User Role HTTP\n  updaterole(username:string, role:string) {\n    return this.http.post<user>('/api/admin/users/updaterole', { username:username, role:role});\n  }\n\n  // Server Delete User HTTP\n  deleteuser(username:string) {\n    return this.http.post<user>('/api/admin/users/deleteuser', { username:username });\n  }\n  \n  // Server Create Group HTTP\n  creategroup(groupname:string) {\n    return this.http.post<group>('/api/admin/groups/creategroup', { groupname:groupname});\n  }\n\n  // Server Delete Group HTTP\n  deletegroup(groupname:string) {\n    return this.http.post<group>('/api/admin/groups/deletegroup', { groupname:groupname });\n  }\n\n  // Server Create Channel HTTP\n  createchannel(groupname:string, channelname:string) {\n    return this.http.post<channel>('/api/admin/groups/createchannel', {groupname:groupname, channelname:channelname});\n  }\n\n  // Server Delete Channel HTTP\n  deletechannel(groupname:string, channelname:string) {\n    return this.http.post<channel>('/api/admin/groups/deletechannel', {groupname:groupname, channelname:channelname});\n  }\n\n  // Server Fetch User List\n  fetchUsers(): Observable<user[]> {\n    return this.http.post<user[]>('/api/admin/users/fetchdata', {});\n  }\n\n  // Server Fetch Group Data\n  fetchGroups(): Observable<group[]> {\n    return this.http.post<group[]>('/api/admin/groups/fetchdata', {});\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// Interface for Server to reference Auth Data to client.\nexport interface user {\n  username: string;\n  role: string;\n  success: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  // POST Login data to Server Authentication\n  login(username:string, password:string) {\n    return this.http.post<user>('/api/auth', { username:username, password:password });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  private url = 'http://localhost:3000';\n  private socket;\n\n  constructor() { }\n  \n  // Default Chatroom\n  defaultChannel(username) {\n    this.socket.emit('default-channel', username);\n  }\n\n  // Join Chatroom Channel\n  joinChannel(joinchannel, joinmessage) {\n    this.socket.emit('join-channel', joinchannel, joinmessage);\n  }\n\n  // Leave Chatroom Channel\n  leaveChannel(leavechannel, leavemessage) {\n    this.socket.emit('leave-channel', leavechannel, leavemessage);\n  }\n\n  // Send Message to server to be transmitted over chat.\n  sendMessage(channel, message) {\n    this.socket.emit('add-message', channel, message);\n  }\n\n  // Retrieve stream of messages from server that were transmitted over chat.\n  getMessages() {\n    let obmessages = new Observable(observer => {\n      this.socket = io();\n      \n      this.socket.on('message', (message) => {observer.next(message);});\n\n      return () => {this.socket.disconnect();}\n    });\n    \n    return obmessages;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}